/// [ref] http://sourcey.com/pacman/

PackageManager::Options options;
// configuration options go here...
PackageManager pacman(options);
pacman.initialize();
        
// query the server for the latest packages
pacman.queryRemotePackages();                
        
// list local (installed) packages
auto litems = pacman.localPackages().items();
for (auto it = litems.begin(); it != litems.end(); ++it) {				
  cout << "Package: " << it->first << endl;
}

// list remote (available) packages
auto ritems = app.remotePackages().items();
for (auto it = ritems.begin(); it != ritems.end(); ++it) {				
  cout << "Package: " << it->first << endl;          
  
  // output the lastest asset information
  it->second->latestAsset().print(cout);	
}                
        
// install a package
pacman.installPackage("SomePackageName");

// update a package (will install if it doesn't exist)
pacman.updatePackage("SomePackageName");

// update / install a list of packages.
// package states are availalbe via callback events
std::vector<std::string> packages;
packages.push_back("SomePackageName");
packages.push_back("IThoughtPacmanWasAGame");        
pacman.installPackages(packages);

// update all packages
pacman.updateAllPackages();

// uninstall a package.
// uninstallPackages() can also be used for multiple packages.
pacman.uninstallPackage("SomePackageName");
